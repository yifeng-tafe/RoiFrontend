{"ast":null,"code":"import * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Styles from \"../styles/MainStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function MyButton(props) {\n  var buttonStyling = [Styles.button, props.style];\n  var textStyling = [Styles.buttonText];\n\n  switch (props.type) {\n    case \"major\":\n      buttonStyling.push(Styles.buttonMajor);\n      textStyling.push(Styles.buttonMajorText);\n      break;\n\n    case \"minor\":\n      buttonStyling.push(Styles.buttonMinor);\n      textStyling.push(Styles.buttonMinorText);\n      break;\n  }\n\n  switch (props.size) {\n    case \"large\":\n      buttonStyling.push(Styles.buttonLarge);\n      textStyling.push(Styles.buttonLargeText);\n      break;\n\n    case \"small\":\n      buttonStyling.push(Styles.buttonSmall);\n      textStyling.push(Styles.buttonSmallText);\n      break;\n  }\n\n  buttonStyling.push(props.buttonStyle);\n  textStyling.push(props.textStyle);\n  return _jsx(Pressable, {\n    onPress: props.onPress,\n    style: buttonStyling,\n    children: _jsx(Text, {\n      style: textStyling,\n      children: props.text\n    })\n  });\n}","map":{"version":3,"names":["React","Styles","MyButton","props","buttonStyling","button","style","textStyling","buttonText","type","push","buttonMajor","buttonMajorText","buttonMinor","buttonMinorText","size","buttonLarge","buttonLargeText","buttonSmall","buttonSmallText","buttonStyle","textStyle","onPress","text"],"sources":["C:/Users/ioris/Desktop/RoiFrontend/components/MyButton.js"],"sourcesContent":["import * as React from 'react';\nimport { Pressable, Text } from 'react-native';\nimport Styles from \"../styles/MainStyle\";\n\n/*\n    <MyButton\n      text=\"Text\"\n      type=\"default*|major|minor\"\n      size=\"small|medium*|large\"\n      onPress={function}\n      buttonStyle={customStyle}\n      textStyle={customStyle}\n    />\n */\nexport function MyButton(props) {\n\n  // Determine button styling\n  let buttonStyling = [Styles.button, props.style];\n  let textStyling = [Styles.buttonText];\n\n  switch(props.type) {\n    case \"major\":\n      buttonStyling.push(Styles.buttonMajor);\n      textStyling.push(Styles.buttonMajorText);\n      break;\n    case \"minor\":\n      buttonStyling.push(Styles.buttonMinor);\n      textStyling.push(Styles.buttonMinorText);\n      break;\n  }\n  \n  switch(props.size) {\n    case \"large\":\n      buttonStyling.push(Styles.buttonLarge);\n      textStyling.push(Styles.buttonLargeText);\n      break;\n    case \"small\":\n      buttonStyling.push(Styles.buttonSmall);\n      textStyling.push(Styles.buttonSmallText);\n      break;\n  }\n\n  // Add custom button styles\n  buttonStyling.push(props.buttonStyle);\n  textStyling.push(props.textStyle);\n\n  return (\n    <Pressable\n      onPress={props.onPress}\n      // Merge default button styles with specified styles\n      style={buttonStyling}>\n      <Text style={textStyling}>{props.text}</Text>\n    </Pressable>\n  );\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,MAAP;;AAYA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAG9B,IAAIC,aAAa,GAAG,CAACH,MAAM,CAACI,MAAR,EAAgBF,KAAK,CAACG,KAAtB,CAApB;EACA,IAAIC,WAAW,GAAG,CAACN,MAAM,CAACO,UAAR,CAAlB;;EAEA,QAAOL,KAAK,CAACM,IAAb;IACE,KAAK,OAAL;MACEL,aAAa,CAACM,IAAd,CAAmBT,MAAM,CAACU,WAA1B;MACAJ,WAAW,CAACG,IAAZ,CAAiBT,MAAM,CAACW,eAAxB;MACA;;IACF,KAAK,OAAL;MACER,aAAa,CAACM,IAAd,CAAmBT,MAAM,CAACY,WAA1B;MACAN,WAAW,CAACG,IAAZ,CAAiBT,MAAM,CAACa,eAAxB;MACA;EARJ;;EAWA,QAAOX,KAAK,CAACY,IAAb;IACE,KAAK,OAAL;MACEX,aAAa,CAACM,IAAd,CAAmBT,MAAM,CAACe,WAA1B;MACAT,WAAW,CAACG,IAAZ,CAAiBT,MAAM,CAACgB,eAAxB;MACA;;IACF,KAAK,OAAL;MACEb,aAAa,CAACM,IAAd,CAAmBT,MAAM,CAACiB,WAA1B;MACAX,WAAW,CAACG,IAAZ,CAAiBT,MAAM,CAACkB,eAAxB;MACA;EARJ;;EAYAf,aAAa,CAACM,IAAd,CAAmBP,KAAK,CAACiB,WAAzB;EACAb,WAAW,CAACG,IAAZ,CAAiBP,KAAK,CAACkB,SAAvB;EAEA,OACE,KAAC,SAAD;IACE,OAAO,EAAElB,KAAK,CAACmB,OADjB;IAGE,KAAK,EAAElB,aAHT;IAAA,UAIE,KAAC,IAAD;MAAM,KAAK,EAAEG,WAAb;MAAA,UAA2BJ,KAAK,CAACoB;IAAjC;EAJF,EADF;AAQD"},"metadata":{},"sourceType":"module"}