{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Settings from \"../constants/Settings\";\nimport { RoiGetPeople, RoiDeletePerson, RoiAddPerson, RoiGetDepartments, RoiUpdatePerson, RoiGetPerson } from \"../utils/Api\";\nimport { PopupOk, PopupOkCancel } from \"../utils/Popup\";\nimport { TextParagraph, TextH1 } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from \"../components/MyButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ViewPersonScreen(props) {\n  var personTemplate = {\n    id: 0,\n    name: \"\",\n    phone: \"\",\n    departmentId: null,\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    contry: \"\",\n    department: null\n  };\n\n  var _React$useState = React.useState(personTemplate),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      person = _React$useState2[0],\n      setPerson = _React$useState2[1];\n\n  React.useEffect(refreshPerson, []);\n\n  function refreshPerson() {\n    var id = props.route.params.id;\n    console.log(\"Load person: \" + id);\n  }\n\n  function showAddPerson() {\n    console.log(\"show add person\");\n  }\n\n  function deletePerson(person) {\n    PopupOkCancel(\"Delete person?\", \"Are you sure you want to delete \" + person.name + \"?\", function () {\n      RoiDeletePerson(person.id).then(function (data) {\n        PopupOk(\"Person deleted\", person.name + \" has been deleted.\");\n        refreshPersonList();\n      }).catch(function (error) {\n        PopupOk(\"Error\", error);\n      });\n    }, function () {});\n  }\n\n  function displayPeople() {\n    return people.map(function (p) {\n      var _p$department$name, _p$department;\n\n      return _jsxs(View, {\n        style: Styles.personListItem,\n        children: [_jsxs(View, {\n          style: Styles.personListItemDetails,\n          children: [_jsx(TextParagraph, {\n            style: Styles.personListItemName,\n            children: p.name\n          }), _jsx(TextParagraph, {\n            style: Styles.personListItemText,\n            children: (_p$department$name = (_p$department = p.department) == null ? void 0 : _p$department.name) != null ? _p$department$name : \"---\"\n          }), _jsx(TextParagraph, {\n            style: Styles.personListItemText,\n            children: p.phone\n          })]\n        }), _jsxs(View, {\n          style: Styles.personListItemButtons,\n          children: [_jsx(MyButton, {\n            text: \"Info\",\n            type: \"major\",\n            size: \"small\",\n            buttonStyle: Styles.personListItemButton,\n            textStyle: Styles.personListItemButtonText\n          }), _jsx(MyButton, {\n            text: \"Edit\",\n            type: \"default\",\n            size: \"small\",\n            buttonStyle: Styles.personListItemButton,\n            textStyle: Styles.personListItemButtonText\n          }), _jsx(MyButton, {\n            text: \"Delete\",\n            type: \"minor\",\n            size: \"small\",\n            onPress: function onPress() {\n              deletePerson(p);\n            },\n            buttonStyle: Styles.personListItemButton,\n            textStyle: Styles.personListItemButtonText\n          })]\n        })]\n      }, p.id);\n    });\n  }\n\n  return _jsxs(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: [_jsxs(View, {\n      style: Styles.personButtonContainer,\n      children: [_jsx(MyButton, {\n        text: \"+Add new person\",\n        type: \"major\",\n        size: \"small\",\n        onPress: showAddPerson\n      }), _jsx(MyButton, {\n        text: \"Refresh\",\n        type: \"defualt\",\n        size: \"small\",\n        onPress: refreshPerson\n      })]\n    }), _jsx(ScrollView, {\n      styel: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: _jsx(TextH1, {\n        style: {\n          marginTop: 0\n        },\n        children: \"Display person info\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","SafeAreaView","Settings","RoiGetPeople","RoiDeletePerson","RoiAddPerson","RoiGetDepartments","RoiUpdatePerson","RoiGetPerson","PopupOk","PopupOkCancel","TextParagraph","TextH1","Styles","MyButton","ViewPersonScreen","props","personTemplate","id","name","phone","departmentId","street","city","state","zip","contry","department","useState","person","setPerson","useEffect","refreshPerson","route","params","console","log","showAddPerson","deletePerson","then","data","refreshPersonList","catch","error","displayPeople","people","map","p","personListItem","personListItemDetails","personListItemName","personListItemText","personListItemButtons","personListItemButton","personListItemButtonText","safeAreaView","personButtonContainer","container","contentContainer","marginTop"],"sources":["C:/Users/ioris/Desktop/RoiFrontend/screens/ViewPersonScreen.js"],"sourcesContent":["import * as React from 'react';\nimport { View, ScrollView } from 'react-native';\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\n// Import helper code\nimport Settings from '../constants/Settings';\nimport { RoiGetPeople, RoiDeletePerson, RoiAddPerson, RoiGetDepartments, RoiUpdatePerson, RoiGetPerson } from '../utils/Api';\nimport { PopupOk, PopupOkCancel } from \"../utils/Popup\";\n\n// Import styling and components\nimport { TextParagraph, TextH1 } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from '../components/MyButton';\n\n\nexport default function ViewPersonScreen(props) {\n\n  // Set up a default Person object\n  const personTemplate = {\n    id: 0,\n    name: \"\",\n    phone: \"\",\n    departmentId: null,\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    contry: \"\",\n    department: null,\n  }  \n\n  // State - data for this componet\n\n  // Store person in state\n  const [person, setPerson] = React.useState(personTemplate)\n  \n  // Set \"effect\" to retrieve and store data - only run on mount/unmount (loaded/unloaded)\n  // \"effectful\" code is something that triggers a UI re-render\n  React.useEffect(refreshPerson, [])\n\n\n  // Refresh the person data - call the API\n  function refreshPerson(){\n    \n    // Get person ID passed to this screen (via props)\n    //const id = props.route.params.id\n    const id = props.route.params.id\n    //Testing \n    console.log(\"Load person: \" + id)\n\n    // Get data from the API\n    // RoiGetPerson(id)\n    //   // Success\n    //   .then(data => {\n    //     // Store results in state variable\n    //     setPerson(data)\n    //   })\n    //   // Error\n    //   .catch(error =>{\n    //     PopupOk(\"API Error\", \"Could not get person from the server\")\n    //   })\n\n    // // Store results in state variable\n    // setPerson(person)\n\n  }\n\n  function showAddPerson() {\n    console.log(\"show add person\")\n  }\n\n  \n\n  \n  /**\n   * Delete a person from the database.\n   * @param {Person} person The person to delete. \n   */\n  function deletePerson(person){\n\n    // Check if person should be deleted (confirm with user)\n    PopupOkCancel(\n\n      // Title and message\n      \"Delete person?\",\n      `Are you sure you want to delete ${person.name}?`,\n      \n      // Ok - delete the person\n      () => {\n        \n        // Delete the person using the API\n        RoiDeletePerson(person.id)\n          .then(data => {\n            // Show confirmation that the person has bee deleted\n            PopupOk(\"Person deleted\", `${person.name} has been deleted.`)\n            // Refresh the person list\n            refreshPersonList()\n        \n        })\n          .catch(error => {\n\n            // Diplay error to user\n            PopupOk(\"Error\", error)\n          })\n\n        },  \n      // Cancel - do nothing\n      () => {}\n\n      )\n  }\n  \n  // Display all people data\n  function displayPeople(){\n    // Loop through each item and turn into appropriate output and tehn return the result\n    return people.map(p => {\n\n      // Create an output view for each item\n      return( \n        <View key={p.id} style={Styles.personListItem}>\n          <View style={Styles.personListItemDetails}>\n            <TextParagraph style={Styles.personListItemName}>{p.name}</TextParagraph>\n            <TextParagraph style={Styles.personListItemText}>{p.department?.name ?? \"---\"}</TextParagraph>\n            <TextParagraph style={Styles.personListItemText}>{p.phone}</TextParagraph>\n          </View>\n          <View style={Styles.personListItemButtons}>\n            {/* buttons */}\n            <MyButton \n              text = \"Info\"\n              type=\"major\"  // default*|major|minor\n              size=\"small\"  // small|medium*|large\n              //onPress={showAddPerson}\n              buttonStyle={Styles.personListItemButton}\n              textStyle={Styles.personListItemButtonText}\n              />\n            <MyButton \n              text = \"Edit\"\n              type=\"default\"  // default*|major|minor\n              size=\"small\"  // small|medium*|large\n              //onPress={showAddPerson}\n              buttonStyle={Styles.personListItemButton}\n              textStyle={Styles.personListItemButtonText}\n              />\n            <MyButton \n              text = \"Delete\"\n              type=\"minor\"  // default*|major|minor\n              size=\"small\"  // small|medium*|large\n              onPress={() => {deletePerson(p)}}\n              buttonStyle={Styles.personListItemButton}\n              textStyle={Styles.personListItemButtonText}\n            />\n          </View>\n          \n        </View>\n      )\n    })\n  \n  }\n  \n  // Main output of the screen component\n  return (\n    <SafeAreaView style={Styles.safeAreaView}>\n      <View style={Styles.personButtonContainer}>\n        <MyButton \n          text = \"+Add new person\"\n          type=\"major\"  // default*|major|minor\n          size=\"small\"  // small|medium*|large\n          onPress={showAddPerson}\n        />\n        <MyButton \n        text = \"Refresh\"\n        type=\"defualt\"  // default*|major|minor\n        size=\"small\"  // small|medium*|large\n        onPress={refreshPerson}\n        />\n      </View>\n\n      <ScrollView styel={Styles.container} contentContainerStyle={Styles.contentContainer}>\n        \n      <TextH1 style={{marginTop:0}}>Display person info</TextH1>\n        \n\n      </ScrollView>\n\n\n    </SafeAreaView>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}